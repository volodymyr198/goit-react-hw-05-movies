{"version":3,"file":"static/js/653.ad2ad858.chunk.js","mappings":"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","sources":["api/movies.js","webpack://react-homework-template/./src/components/Movies/Movies.module.css?9f30","components/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'https://api.themoviedb.org/3',\n    params: {\n        api_key: 'c4470790ebbe8d3413f4b160c59323f6',\n    },\n});\n\nexport const getTrendingMovies = async () => {\n    const requestParams = '/trending/movie/day';\n    const { data } = await instance.get(requestParams);\n    return data.results;\n};\n\nexport const getMovieDetails = async id => {\n    const requestParams = `/movie/${id}`;\n    const { data } = await instance.get(requestParams);\n    return data;\n};\n\nexport const getSearchMovie = async searchQuery => {\n    const requestParams = `/search/movie?query=${searchQuery}`;\n    const { data } = await instance.get(requestParams);\n    return data.results;\n};\n\nexport const getMovieCast = async id => {\n    const requestParams = `/movie/${id}/credits`;\n    const { data } = await instance.get(requestParams);\n    return data.cast;\n};\n\nexport const getMovieReviews = async id => {\n    const requestParams = `/movie/${id}/reviews`;\n    const { data } = await instance.get(requestParams);\n    return data.results;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Movies_wrapper__vWoXg\",\"searchForm\":\"Movies_searchForm__S-9T7\",\"searchForm__input\":\"Movies_searchForm__input__F1TpI\",\"searchForm__btn\":\"Movies_searchForm__btn__9OVw8\",\"search__item\":\"Movies_search__item__mdV+b\",\"svg\":\"Movies_svg__zR8LH\",\"default\":\"Movies_default__TdL52\"};","import { useState, useEffect } from 'react';\nimport { Link, useSearchParams, useLocation } from 'react-router-dom';\nimport { ImSearch } from 'react-icons/im';\nimport { FcFilmReel } from 'react-icons/fc';\n\nimport { getSearchMovie } from 'api/movies';\nimport css from './Movies.module.css';\n\nconst Movies = () => {\n    const [state, setState] = useState({\n        items: [],\n        loading: false,\n        error: null,\n    });\n\n    const [searchParams, setSearchParams] = useSearchParams();\n    const query = searchParams.get('query');\n\n    const [search, setSearch] = useState(() => query || '');\n    const location = useLocation();\n\n    useEffect(() => {\n        const fetchMovies = async () => {\n            try {\n                setState(prevState => {\n                    return { ...prevState, loading: true };\n                });\n\n                const results = await getSearchMovie(query);\n                setState(prevState => ({\n                    ...prevState,\n                    items: results,\n                }));\n            } catch (error) {\n                setState(prevState => ({\n                    ...prevState,\n                    error,\n                }));\n            } finally {\n                setState(prevState => ({\n                    ...prevState,\n                    loading: false,\n                }));\n            }\n        };\n        if (query) {\n            fetchMovies();\n        }\n    }, [query]);\n\n    const { items, loading, error } = state;\n\n    const handleChange = ({ target }) => {\n        setSearch(target.value);\n    };\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        if (search.trim()) {\n            setSearchParams({ query: search });\n        }\n    };\n\n    const elements = items.map(({ id, original_title }) => (\n        <li key={id} className={css.search__item}>\n            <FcFilmReel className={css.svg} />\n            <Link state={{ from: location }} to={`/movies/${id}`}>\n                {original_title}\n            </Link>\n        </li>\n    ));\n    return (\n        <div className={css.wrapper}>\n            <form\n                onSubmit={handleSubmit}\n                className={css.searchForm}\n                autoComplete=\"off\"\n            >\n                <input\n                    className={css.searchForm__input}\n                    onChange={handleChange}\n                    type=\"text\"\n                    name=\"search\"\n                    value={search}\n                    placeholder=\"Search Movies\"\n                    required\n                />\n                <button className={css.searchForm__btn} type=\"sabmit\">\n                    <ImSearch />\n                </button>\n            </form>\n            {search && items.length > 0 && !loading && !error && (\n                <ul>{elements}</ul>\n            )}\n            {loading && <p className={css.default}>...load movies</p>}\n            {error && <p className={css.default}>...Movies load filed</p>}\n            {items.length === 0 && query && !loading && !error && (\n                <p className={css.default}>\n                    {`Sorry, there is nothing with the title - ${query}!`}\n                </p>\n            )}\n        </div>\n    );\n};\n\nexport default Movies;\n"],"names":["instance","axios","baseURL","params","api_key","getTrendingMovies","get","data","results","getMovieDetails","id","requestParams","getSearchMovie","searchQuery","getMovieCast","cast","getMovieReviews","useState","items","loading","error","state","setState","useSearchParams","searchParams","setSearchParams","query","search","setSearch","location","useLocation","useEffect","fetchMovies","prevState","elements","map","original_title","className","css","from","to","onSubmit","e","preventDefault","trim","autoComplete","onChange","target","value","type","name","placeholder","required","length"],"sourceRoot":""}
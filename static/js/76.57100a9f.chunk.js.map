{"version":3,"file":"static/js/76.57100a9f.chunk.js","mappings":"qSAEMA,E,OAAWC,EAAAA,OAAa,CAC1BC,QAAS,+BACTC,OAAQ,CACJC,QAAS,sCAIJC,EAAiB,mCAAG,4FACP,sBADO,SAENL,EAASM,IADV,uBADO,uBAErBC,EAFqB,EAErBA,KAFqB,kBAGtBA,EAAKC,SAHiB,2CAAH,qDAMjBC,EAAe,mCAAG,WAAMC,GAAN,kFACrBC,EADqB,iBACKD,GADL,SAEJV,EAASM,IAAIK,GAFT,uBAEnBJ,EAFmB,EAEnBA,KAFmB,kBAGpBA,GAHoB,2CAAH,sDAMfK,EAAc,mCAAG,WAAMC,GAAN,kFACpBF,EADoB,8BACmBE,GADnB,SAEHb,EAASM,IAAIK,GAFV,uBAElBJ,EAFkB,EAElBA,KAFkB,kBAGnBA,EAAKC,SAHc,2CAAH,sDAMdM,EAAY,mCAAG,WAAMJ,GAAN,kFAClBC,EADkB,iBACQD,EADR,qBAEDV,EAASM,IAAIK,GAFZ,uBAEhBJ,EAFgB,EAEhBA,KAFgB,kBAGjBA,EAAKQ,MAHY,2CAAH,sDAMZC,EAAe,mCAAG,WAAMN,GAAN,kFACrBC,EADqB,iBACKD,EADL,qBAEJV,EAASM,IAAIK,GAFT,uBAEnBJ,EAFmB,EAEnBA,KAFmB,kBAGpBA,EAAKC,SAHe,2CAAH,qD,sJChC5B,EAA6B,yBAA7B,EAAmE,yBAAnE,EAAsG,sB,SCgFtG,EA1Ea,WACT,OAA0BS,EAAAA,EAAAA,UAAS,CAC/BC,MAAO,GACPC,SAAS,EACTC,MAAO,OAHX,eAAOC,EAAP,KAAcC,EAAd,KAKQC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAS,mCAAG,oGAEVJ,GAAS,SAAAK,GACL,OAAO,kBAAKA,GAAZ,IAAuBR,SAAS,EAAMC,MAAO,MAChD,IAJS,UAKWN,EAAAA,EAAAA,IAAaS,GALxB,OAKJK,EALI,OAMVN,GAAS,SAAAK,GACL,OAAO,kBACAA,GADP,IAEIT,MAAOU,GAEd,IAXS,gDAaVN,GAAS,SAAAK,GACL,OAAO,kBAAKA,GAAZ,IAAuBP,MAAK,MAC/B,IAfS,yBAiBVE,GAAS,SAAAK,GACL,OAAO,kBACAA,GADP,IAEIR,SAAS,GAEhB,IAtBS,4EAAH,qDAyBfO,GACH,GAAE,CAACH,IACJ,IAAQL,EAA0BG,EAA1BH,MAAOC,EAAmBE,EAAnBF,QAASC,EAAUC,EAAVD,MAElBS,EAAWX,EAAMY,KAAI,gBAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,KAAMC,EAAvB,EAAuBA,UAAWC,EAAlC,EAAkCA,QAAlC,OACvB,gBAAkBC,UAAWC,EAA7B,UACKL,GACG,gBACIM,IAAG,yCAAoCN,GACvCO,IAAKN,EACLO,MAAM,QACNC,OAAO,WAGX,gBACIH,IAAKI,EACLH,IAAKN,EACLO,MAAM,QACNC,OAAO,WAGf,wBAAKR,KACL,uCAAeC,OAjBVC,EADc,IAsB3B,OACI,2BACsB,IAAjBhB,EAAMwB,SAAiBvB,IAAYC,IAChC,cAAGe,UAAWC,EAAd,mCAEHjB,IAAW,cAAGgB,UAAWC,EAAd,0BACXhB,IAAS,cAAGe,UAAWC,EAAd,iCACRjB,IAAYC,GAASF,IACnB,eAAIiB,UAAWC,EAAf,SAAgCP,MAI/C,C","sources":["api/movies.js","webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'https://api.themoviedb.org/3',\n    params: {\n        api_key: 'c4470790ebbe8d3413f4b160c59323f6',\n    },\n});\n\nexport const getTrendingMovies = async () => {\n    const requestParams = '/trending/movie/day';\n    const { data } = await instance.get(requestParams);\n    return data.results;\n};\n\nexport const getMovieDetails = async id => {\n    const requestParams = `/movie/${id}`;\n    const { data } = await instance.get(requestParams);\n    return data;\n};\n\nexport const getSearchMovie = async searchQuery => {\n    const requestParams = `/search/movie?query=${searchQuery}`;\n    const { data } = await instance.get(requestParams);\n    return data.results;\n};\n\nexport const getMovieCast = async id => {\n    const requestParams = `/movie/${id}/credits`;\n    const { data } = await instance.get(requestParams);\n    return data.cast;\n};\n\nexport const getMovieReviews = async id => {\n    const requestParams = `/movie/${id}/reviews`;\n    const { data } = await instance.get(requestParams);\n    return data.results;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"cast__list\":\"Cast_cast__list__yNezN\",\"cast__item\":\"Cast_cast__item__UfPEI\",\"default\":\"Cast_default__RymRA\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport noUserImage from '../../img/no-user-image.gif';\nimport { getMovieCast } from 'api/movies';\nimport css from './Cast.module.css';\n\nconst Cast = () => {\n    const [state, setState] = useState({\n        items: [],\n        loading: false,\n        error: null,\n    });\n    const { movieId } = useParams();\n\n    useEffect(() => {\n        const fetchCast = async () => {\n            try {\n                setState(prevState => {\n                    return { ...prevState, loading: true, error: null };\n                });\n                const result = await getMovieCast(movieId);\n                setState(prevState => {\n                    return {\n                        ...prevState,\n                        items: result,\n                    };\n                });\n            } catch (error) {\n                setState(prevState => {\n                    return { ...prevState, error };\n                });\n            } finally {\n                setState(prevState => {\n                    return {\n                        ...prevState,\n                        loading: false,\n                    };\n                });\n            }\n        };\n        fetchCast();\n    }, [movieId]);\n    const { items, loading, error } = state;\n\n    const elements = items.map(({ profile_path, name, character, cast_id }) => (\n        <li key={cast_id} className={css.cast__item}>\n            {profile_path ? (\n                <img\n                    src={`https://image.tmdb.org/t/p/w500${profile_path}`}\n                    alt={name}\n                    width=\"160px\"\n                    height=\"230px\"\n                />\n            ) : (\n                <img\n                    src={noUserImage}\n                    alt={name}\n                    width=\"160px\"\n                    height=\"230px\"\n                />\n            )}\n            <h3>{name}</h3>\n            <p>Character: {character}</p>\n        </li>\n    ));\n\n    return (\n        <div>\n            {items.length === 0 && !loading && !error && (\n                <p className={css.default}>Sorry, nothing found!</p>\n            )}\n            {loading && <p className={css.default}>...load Cast</p>}\n            {error && <p className={css.default}>...Cast load filed</p>}\n            {!loading && !error && items && (\n                <ul className={css.cast__list}>{elements}</ul>\n            )}\n        </div>\n    );\n};\n\nexport default Cast;\n"],"names":["instance","axios","baseURL","params","api_key","getTrendingMovies","get","data","results","getMovieDetails","id","requestParams","getSearchMovie","searchQuery","getMovieCast","cast","getMovieReviews","useState","items","loading","error","state","setState","movieId","useParams","useEffect","fetchCast","prevState","result","elements","map","profile_path","name","character","cast_id","className","css","src","alt","width","height","noUserImage","length"],"sourceRoot":""}
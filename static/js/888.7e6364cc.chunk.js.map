{"version":3,"file":"static/js/888.7e6364cc.chunk.js","mappings":"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","sources":["api/movies.js","webpack://react-homework-template/./src/components/MovieDetails/MovieDetails.module.css?9ca9","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'https://api.themoviedb.org/3',\n    params: {\n        api_key: 'c4470790ebbe8d3413f4b160c59323f6',\n    },\n});\n\nexport const getTrendingMovies = async () => {\n    const requestParams = '/trending/movie/day';\n    const { data } = await instance.get(requestParams);\n    return data.results;\n};\n\nexport const getMovieDetails = async id => {\n    const requestParams = `/movie/${id}`;\n    const { data } = await instance.get(requestParams);\n    return data;\n};\n\nexport const getSearchMovie = async searchQuery => {\n    const requestParams = `/search/movie?query=${searchQuery}`;\n    const { data } = await instance.get(requestParams);\n    return data.results;\n};\n\nexport const getMovieCast = async id => {\n    const requestParams = `/movie/${id}/credits`;\n    const { data } = await instance.get(requestParams);\n    return data.cast;\n};\n\nexport const getMovieReviews = async id => {\n    const requestParams = `/movie/${id}/reviews`;\n    const { data } = await instance.get(requestParams);\n    return data.results;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"details\":\"MovieDetails_details__tmd20\",\"details__backBtn\":\"MovieDetails_details__backBtn__G-zOu\",\"details__wrapper\":\"MovieDetails_details__wrapper__Celhd\",\"details__img\":\"MovieDetails_details__img__74DKe\",\"details__title\":\"MovieDetails_details__title__V6OV0\",\"details__pretitle\":\"MovieDetails_details__pretitle__c7m79\",\"additional\":\"MovieDetails_additional__EaCvI\",\"additional__title\":\"MovieDetails_additional__title__7-Odo\",\"details__text\":\"MovieDetails_details__text__Y2VgZ\",\"additional__list\":\"MovieDetails_additional__list__+Q2oK\",\"additional__item\":\"MovieDetails_additional__item__Xh7vX\",\"default\":\"MovieDetails_default__JA0vM\"};","import {\n    useNavigate,\n    Link,\n    useParams,\n    Outlet,\n    useLocation,\n} from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getMovieDetails } from 'api/movies';\nimport noPoster from '../../img/no-poster-available.jpg';\nimport css from './MovieDetails.module.css';\n\nconst MovieDetails = () => {\n    const [state, setState] = useState({\n        item: {},\n        loading: false,\n        error: null,\n    });\n    const { movieId } = useParams();\n    const navigate = useNavigate();\n    const location = useLocation();\n    const backLinkHref = location.state?.from ?? '/';\n\n    useEffect(() => {\n        const fetchDetails = async () => {\n            try {\n                setState(prevState => {\n                    return { ...prevState, loading: true, error: null };\n                });\n                const result = await getMovieDetails(movieId);\n\n                setState(prevState => {\n                    return {\n                        ...prevState,\n                        item: result,\n                    };\n                });\n            } catch (error) {\n                setState(prevState => {\n                    return { ...prevState, error };\n                });\n            } finally {\n                setState(prevState => {\n                    return {\n                        ...prevState,\n                        loading: false,\n                    };\n                });\n            }\n        };\n        fetchDetails();\n    }, [movieId]);\n    const { item, loading, error } = state;\n    const {\n        genres,\n        overview,\n        vote_average,\n        original_title,\n        release_date,\n        poster_path,\n    } = item;\n\n    const getDateMovie = date => {\n        const year = new Date(date);\n        return year.getFullYear();\n    };\n\n    const getGenres = allGenres => {\n        return allGenres.map(genre => genre.name).join(', ');\n    };\n\n    return (\n        <main className={css.details}>\n            {loading && <p className={css.default}>...load details</p>}\n            {error && <p className={css.default}>...Details load filed</p>}\n            {!loading && !error && genres && (\n                <>\n                    <button\n                        onClick={() => navigate(backLinkHref)}\n                        className={css.details__backBtn}\n                    >\n                        Go back\n                    </button>\n                    <div className={css.details__wrapper}>\n                        {poster_path ? (\n                            <img\n                                className={css.details__img}\n                                src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n                                alt={original_title}\n                                width=\"300px\"\n                                height=\"450px\"\n                            />\n                        ) : (\n                            <img\n                                className={css.details__img}\n                                src={noPoster}\n                                alt=\"not available\"\n                                width=\"300px\"\n                                height=\"450px\"\n                            />\n                        )}\n\n                        <div>\n                            <h1 className={css.details__title}>\n                                {original_title} ({getDateMovie(release_date)})\n                            </h1>\n                            <p>\n                                <span className={css.details__text}>\n                                    User Score:{' '}\n                                </span>\n                                {Math.round(vote_average * 10) ||\n                                    'Sorry, nothing found!'}\n                                %\n                            </p>\n                            <h3 className={css.details__pretitle}>Overview</h3>\n                            <p>{overview || 'Sorry, nothing found!'} </p>\n                            <h3 className={css.details__pretitle}>Genres</h3>\n                            <p>\n                                {getGenres(genres) || 'Sorry, nothing found!'}\n                            </p>\n                        </div>\n                    </div>\n                    <div className={css.additional}>\n                        <h3 className={css.additional__title}>\n                            Additional information\n                        </h3>\n                        <ul className={css.additional__list}>\n                            <li>\n                                <Link\n                                    className={css.additional__item}\n                                    to=\"cast\"\n                                    state={{ from: backLinkHref }}\n                                >\n                                    Cast\n                                </Link>\n                            </li>\n                            <li>\n                                <Link\n                                    className={css.additional__item}\n                                    to=\"reviews\"\n                                    state={{ from: backLinkHref }}\n                                >\n                                    Reviews\n                                </Link>\n                            </li>\n                        </ul>\n                    </div>\n                    <Outlet />\n                </>\n            )}\n        </main>\n    );\n};\n\nexport default MovieDetails;\n"],"names":["instance","axios","baseURL","params","api_key","getTrendingMovies","get","data","results","getMovieDetails","id","requestParams","getSearchMovie","searchQuery","getMovieCast","cast","getMovieReviews","useState","item","loading","error","state","setState","movieId","useParams","navigate","useNavigate","backLinkHref","useLocation","from","useEffect","fetchDetails","prevState","result","allGenres","date","genres","overview","vote_average","original_title","release_date","poster_path","className","css","onClick","src","alt","width","height","noPoster","Date","getFullYear","Math","round","map","genre","name","join","to"],"sourceRoot":""}
{"version":3,"file":"static/js/168.a2ff666c.chunk.js","mappings":"sSAEMA,E,OAAWC,EAAAA,OAAa,CAC1BC,QAAS,+BACTC,OAAQ,CACJC,QAAS,sCAIJC,EAAiB,mCAAG,4FACP,sBADO,SAENL,EAASM,IADV,uBADO,uBAErBC,EAFqB,EAErBA,KAFqB,kBAGtBA,EAAKC,SAHiB,2CAAH,qDAMjBC,EAAe,mCAAG,WAAMC,GAAN,kFACrBC,EADqB,iBACKD,GADL,SAEJV,EAASM,IAAIK,GAFT,uBAEnBJ,EAFmB,EAEnBA,KAFmB,kBAGpBA,GAHoB,2CAAH,sDAMfK,EAAc,mCAAG,WAAMC,GAAN,kFACpBF,EADoB,8BACmBE,GADnB,SAEHb,EAASM,IAAIK,GAFV,uBAElBJ,EAFkB,EAElBA,KAFkB,kBAGnBA,EAAKC,SAHc,2CAAH,sDAMdM,EAAY,mCAAG,WAAMJ,GAAN,kFAClBC,EADkB,iBACQD,EADR,qBAEDV,EAASM,IAAIK,GAFZ,uBAEhBJ,EAFgB,EAEhBA,KAFgB,kBAGjBA,EAAKQ,MAHY,2CAAH,sDAMZC,EAAe,mCAAG,WAAMN,GAAN,kFACrBC,EADqB,iBACKD,EADL,qBAEJV,EAASM,IAAIK,GAFT,uBAEnBJ,EAFmB,EAEnBA,KAFmB,kBAGpBA,EAAKC,SAHe,2CAAH,qD,4KChC5B,EAA0B,yBAA1B,EAAoE,gCAApE,EAA8G,yB,SCKjGS,EAAU,WACnB,OAA0BC,EAAAA,EAAAA,UAAS,CAC/BC,MAAO,GACPC,SAAS,EACTC,MAAO,OAHX,eAAOC,EAAP,KAAcC,EAAd,KAKQC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAY,mCAAG,oGAEbJ,GAAS,SAAAK,GACL,OAAO,kBAAKA,GAAZ,IAAuBR,SAAS,EAAMC,MAAO,MAChD,IAJY,UAKQL,EAAAA,EAAAA,IAAgBQ,GALxB,OAKPK,EALO,OAObN,GAAS,SAAAK,GACL,OAAO,kBACAA,GADP,IAEIT,MAAOU,GAEd,IAZY,gDAcbN,GAAS,SAAAK,GACL,OAAO,kBAAKA,GAAZ,IAAuBP,MAAK,MAC/B,IAhBY,yBAkBbE,GAAS,SAAAK,GACL,OAAO,kBACAA,GADP,IAEIR,SAAS,GAEhB,IAvBY,4EAAH,qDA0BlBO,GACH,GAAE,CAACH,IACJ,IAAQL,EAA0BG,EAA1BH,MAAOC,EAAmBE,EAAnBF,QAASC,EAAUC,EAAVD,MAElBS,EAAWX,EAAMY,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASvB,EAApB,EAAoBA,GAApB,OACvB,2BACI,gBAAIwB,UAAWC,EAAf,qBAA4CH,MAC5C,uBAAIC,MAFCvB,EADc,IAO3B,OACI,iBAAKwB,UAAWC,EAAhB,UACsB,IAAjBhB,EAAMiB,SAAiBhB,IAAYC,IAChC,cAAGa,UAAWC,EAAd,mCAEHf,IAAW,cAAGc,UAAWC,EAAd,6BACXd,IAAS,cAAGa,UAAWC,EAAd,oCACRf,IAAYC,GAASF,IAAS,wBAAKW,MAGhD,EAED,G","sources":["api/movies.js","webpack://react-homework-template/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'https://api.themoviedb.org/3',\n    params: {\n        api_key: 'c4470790ebbe8d3413f4b160c59323f6',\n    },\n});\n\nexport const getTrendingMovies = async () => {\n    const requestParams = '/trending/movie/day';\n    const { data } = await instance.get(requestParams);\n    return data.results;\n};\n\nexport const getMovieDetails = async id => {\n    const requestParams = `/movie/${id}`;\n    const { data } = await instance.get(requestParams);\n    return data;\n};\n\nexport const getSearchMovie = async searchQuery => {\n    const requestParams = `/search/movie?query=${searchQuery}`;\n    const { data } = await instance.get(requestParams);\n    return data.results;\n};\n\nexport const getMovieCast = async id => {\n    const requestParams = `/movie/${id}/credits`;\n    const { data } = await instance.get(requestParams);\n    return data.cast;\n};\n\nexport const getMovieReviews = async id => {\n    const requestParams = `/movie/${id}/reviews`;\n    const { data } = await instance.get(requestParams);\n    return data.results;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"reviews\":\"Reviews_reviews__n3fdK\",\"reviews__title\":\"Reviews_reviews__title__+XJ8d\",\"default\":\"Reviews_default__fvjbk\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getMovieReviews } from 'api/movies';\nimport css from './Reviews.module.css';\n\nexport const Reviews = () => {\n    const [state, setState] = useState({\n        items: [],\n        loading: false,\n        error: null,\n    });\n    const { movieId } = useParams();\n\n    useEffect(() => {\n        const fetchReviews = async () => {\n            try {\n                setState(prevState => {\n                    return { ...prevState, loading: true, error: null };\n                });\n                const result = await getMovieReviews(movieId);\n\n                setState(prevState => {\n                    return {\n                        ...prevState,\n                        items: result,\n                    };\n                });\n            } catch (error) {\n                setState(prevState => {\n                    return { ...prevState, error };\n                });\n            } finally {\n                setState(prevState => {\n                    return {\n                        ...prevState,\n                        loading: false,\n                    };\n                });\n            }\n        };\n        fetchReviews();\n    }, [movieId]);\n    const { items, loading, error } = state;\n\n    const elements = items.map(({ author, content, id }) => (\n        <li key={id}>\n            <h3 className={css.reviews__title}>Author: {author}</h3>\n            <p>{content}</p>\n        </li>\n    ));\n\n    return (\n        <div className={css.reviews}>\n            {items.length === 0 && !loading && !error && (\n                <p className={css.default}>Sorry, nothing found!</p>\n            )}\n            {loading && <p className={css.default}>...load Reviews</p>}\n            {error && <p className={css.default}>...Reviews load filed</p>}\n            {!loading && !error && items && <ul>{elements}</ul>}\n        </div>\n    );\n};\n\nexport default Reviews;\n"],"names":["instance","axios","baseURL","params","api_key","getTrendingMovies","get","data","results","getMovieDetails","id","requestParams","getSearchMovie","searchQuery","getMovieCast","cast","getMovieReviews","Reviews","useState","items","loading","error","state","setState","movieId","useParams","useEffect","fetchReviews","prevState","result","elements","map","author","content","className","css","length"],"sourceRoot":""}